{"/home/travis/build/npmtest/node-npmtest-common-errors/test.js":"/* istanbul instrument in package npmtest_common_errors */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-common-errors/lib.npmtest_common_errors.js":"/* istanbul instrument in package npmtest_common_errors */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_common_errors = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_common_errors = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-common-errors/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-common-errors && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_common_errors */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_common_errors\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_common_errors.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_common_errors.rollup.js'] =\n            local.assetsDict['/assets.npmtest_common_errors.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_common_errors.__dirname + '/lib.npmtest_common_errors.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/index.js":"var util = require('util');\n\nvar exports = module.exports = {\n  helpers: {\n    generateClass: require('./lib/helpers/class-generator')\n  },\n  middleware: {\n    errorHandler: require('./lib/middleware/errorHandler'),\n    crashProtector: require('./lib/middleware/crashProtector')\n  }\n};\n\nexports.AlreadyInUseError = exports.AlreadyInUse = require('./lib/alreadyInUse');\nexports.ArgumentError = exports.Argument = require('./lib/argument');\nexports.ArgumentNullError = exports.ArgumentNull = require('./lib/argumentNull');\nexports.AuthenticationRequiredError = exports.AuthenticationRequired = require('./lib/authenticationRequired');\nexports.ConnectionError = exports.helpers.generateClass('ConnectionError');\nexports.Error = exports.helpers.generateClass('Error');\nexports.HttpStatusError = exports.HttpStatus = require('./lib/http-status');\nexports.InvalidOperationError = require('./lib/invalid-operation');\nexports.NotFoundError = require('./lib/not-found');\nexports.NotImplementedError = exports.helpers.generateClass('NotImplementedError'),\nexports.NotSupportedError = exports.NotSupported = require('./lib/not-supported');\nexports.NotPermittedError = exports.NotPermitted = require('./lib/notPermitted');\nexports.OutOfMemoryError = exports.helpers.generateClass('OutOfMemoryError');\nexports.RangeError = exports.helpers.generateClass('RangeError', { extends: RangeError });\nexports.ReferenceError = exports.helpers.generateClass('ReferenceError', { extends: ReferenceError });\nexports.StackOverflowError = exports.helpers.generateClass('StackOverflowError');\nexports.SyntaxError = exports.helpers.generateClass('SyntaxError', { extends: SyntaxError });\nexports.TimeoutError = require('./lib/timeout.js')\nexports.TypeError = exports.helpers.generateClass('TypeError', { extends: TypeError });\nexports.URIError = exports.helpers.generateClass('URIError', { extends: URIError });\nexports.ValidationError = exports.Validation = require('./lib/validation');\n\nexports.io = {\n  IOError: require('./lib/io/io')\n};\nexports.io.DirectoryNotFoundError = exports.helpers.generateClass('DirectoryNotFoundError', { extends: exports.io.IOError });\nexports.io.DriveNotFoundError = exports.helpers.generateClass('DriveNotFoundError', { extends: exports.io.IOError });\nexports.io.EndOfStreamError = exports.helpers.generateClass('EndOfStreamError', { extends: exports.io.IOError });\nexports.io.FileLoadError = require('./lib/io/file-load');\nexports.io.FileNotFoundError = require('./lib/io/file-not-found');\nexports.io.SocketError = exports.helpers.generateClass('SocketError', { extends: exports.io.IOError });\n\nexports.data = {\n  DataError: require('./lib/data/data')\n};\nexports.data.MemcachedError = exports.helpers.generateClass('MemcachedError', { extends: exports.data.DataError });\nexports.data.MongoDBError = exports.helpers.generateClass('MongoDBError', { extends: exports.data.DataError });\nexports.data.RedisError = exports.helpers.generateClass('RedisError', { extends: exports.data.DataError });\nexports.data.RollbackError = exports.helpers.generateClass('RollbackError', { extends: exports.data.DataError });\nexports.data.SQLError = exports.helpers.generateClass('SQLError', { extends: exports.data.DataError });\nexports.data.TransactionError = exports.helpers.generateClass('TransactionError', { extends: exports.data.DataError });\n\n\n\nexports.Generic = exports.helpers.generateClass('GenericError'); //deprecated\n\n\nvar logErrorDeprecationWarning = false;\nmodule.exports.logError = function(err, cb) {\n  if (!logErrorDeprecationWarning) console.warn(\"logError is deprecated.  Use log instead.\");\n  logErrorDeprecationWarning = true;\n\n  if (err && !err.isLogged) {\n    err.isLogged = true;\n    console.error(err);\n  }\n  if (cb) cb(err);\n};\n\nmodule.exports.log = function(err, message) {\n  if (typeof err == 'string') {\n    err = new module.exports.Error(err);\n  } else {\n    if (message) {\n      err.message = message;\n    }\n    err = module.exports.prependCurrentStack(err, 3);\n  }\n  if (err) {\n    console.error(err && err.stack || err);\n    err.isLogged = true;\n  }\n  return err;\n}\n\nmodule.exports.prependCurrentStack = function(err, offset_) {\n  var linesToSkip = (typeof offset_ === 'undefined') ? 2 : offset_;\n  var stackToPrepend = (new Error()).stack.split(\"\\n\").slice(linesToSkip);\n  var mainStack = (err.stack || '').split(\"\\n\");\n  var errTitle = mainStack.shift();\n  err.stack = [errTitle].concat(stackToPrepend, \"====\", mainStack).join(\"\\n\");\n  return err;\n};","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/helpers/class-generator.js":"var util = require('util');\nvar globalize = require('../internal/globalize');\n\nmodule.exports = function generateErrorClass(name, options){\n  options = options || {};\n  if(options.subclass) console.warn(\"options.subclass is deprecated. use options.extends instead.\");\n  options.extends = options.extends || options.subclass || Error;\n  options.args = options.args || ['message', 'inner_error'];\n  options.generateMessage = options.generateMessage || null;\n  options.globalize = options.globalize === false ? false : true;\n\n  validateInput(name);\n  validateArrayInput(options.args);\n\n  var classConstructor = function classConstructor(){\n    Class.super_.call(this);\n    if(this.global_initialize) this.global_initialize(Class);\n\n    this.args = arguments;\n    for(var i = 0; i<options.args.length; i++){\n      this[options.args[i]] = arguments[i];\n    }\n    this.name = name;\n    if(this.generateMessage) this.message = this.generateMessage();\n    Class.captureStackTrace(this, Class);\n  };\n\n  var classGeneratorFn = new Function('classConstructor', [\n    \"return function \", name, \"(\", options.args.join(', '), \"){\",\n      \"if(!(this instanceof \", name, \")) {\",\n        \"var instance = Object.create(\", name, \".prototype);\",\n        \"classConstructor.apply(instance, arguments);\",\n        \"return instance;\",\n      \"} else {\",\n        \"classConstructor.apply(this, arguments);\",\n      \"}\",\n    \"};\",\n  ].join(''));\n  var Class = classGeneratorFn(classConstructor);\n\n  util.inherits(Class, options.extends);\n\n  Class.prototype.generateMessage = options.generateMessage;\n\n  Class.captureStackTrace = function captureStackTrace(error, error_class){\n    Error.captureStackTrace(error, error_class);\n    if(error.inner_error && error.inner_error.stack) error.stack += \"\\n--- inner error ---\\n\" + error.inner_error.stack;\n  }\n\n  if(options.globalize) globalize(Class);\n  return Class;\n}\n\nvar validateInput = function validateInput(str){\n  if(typeof str != 'string' || !/^[\\-\\w]+$/.test(str)) throw new Error(\"Unsafe or invalid string '\" + (str || '').toString() + \"' used to generate Error class.\");\n}\nvar validateArrayInput = function validateArrayInput(array){\n  if(!array || !Array.isArray(array)) throw new Error(\"Unsafe or invalid args used to generate Error class.\");\n  for(var i = 0; i<array.length; i++) validateInput(array[i]);\n}","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/internal/globalize.js":"var util = require('util');\nvar key = \"__COMMON-ERRORS-TYPES__\";\nvar global_errors = global[key] = global[key] || {};\n\nmodule.exports = function global_extend(Class) {\n  Class.__original_prototype__ = Class.prototype;\n  var global_class = global_errors[Class.name] = global_errors[Class.name] || Class;\n  Class.prototype = Class.__global_prototype__ = global_class.prototype;\n  Class.prototype.global_initialize = Class.prototype.global_initialize || function global_initialize(Class){\n    var proto_keys = Object.keys(Class.__original_prototype__);\n    for(var i = 0; i<proto_keys.length; i++) {\n      var proto_key = proto_keys[i];\n      this[proto_key] = Class.__original_prototype__[proto_key];\n    }\n  };\n}","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/middleware/errorHandler.js":"var HttpStatusError = require('../http-status');\n\nmodule.exports = function errorHandler(err, req, res, next){\n  if(!err) {\n    if(next) return next();\n    else return res.end();\n  }\n\n  err = new HttpStatusError(err, req);\n  if(err.status_code >= 500) {\n    console.error(err.stack);\n    err.message = HttpStatusError.message_map[500]; //hide the real error from user agent.\n  }\n\n  res.status(err.status_code).send(err.message);\n}\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/http-status.js":"var http = require('http');\nvar util = require('util');\n\nvar STATUS_CODE_ATTRIBUTE_NAME = module.exports.STATUS_CODE_ATTRIBUTE_NAME = 'status';\n\nvar HttpStatusError = module.exports = function HttpStatusError(status_code, message) {\n  if(!(this instanceof HttpStatusError)) {\n    var instance = Object.create(HttpStatusError.prototype);\n    HttpStatusError.apply(instance, arguments);\n    return instance;\n  }\n\n  if(typeof message == 'number' && typeof status_code != 'number') {\n    //old interface, so swap.\n    var c = message;\n    message = status_code;\n    status_code = c;\n  } else if(status_code instanceof Error) {\n    var err = status_code;\n    var req = message;\n    status_code = err.statusCode || err.status_code || err[STATUS_CODE_ATTRIBUTE_NAME];\n    if(typeof status_code != \"number\") {\n      status_code = code_map[err.name];\n      if(typeof status_code == \"function\") {\n        status_code(err, req);\n        status_code = err.status_code;\n      }\n      status_code = status_code || 500;\n    } \n    message = err.message;\n    this.stack = err.stack;\n  }\n\n  this.status_code = this.statusCode = this[STATUS_CODE_ATTRIBUTE_NAME] = status_code || 500;\n  this.name = \"HttpStatusError\";\n\n  var http_message = \"(\" + this.status_code + \") \" + message_map[status_code] || message_map[status_code >= 500 ? 500 : 400];\n  this.message = message || http_message;\n  if(!this.stack) Error.captureStackTrace(this, HttpStatusError);\n  if(message) this.stack = http_message + \"\\n\" + this.stack;\n}\nutil.inherits(HttpStatusError, Error);\n\nvar code_map = HttpStatusError.code_map = {\n  \"ValidationError\": 400,\n  \"ArgumentError\": 400,\n  \"AuthenticationRequiredError\": 401,\n  \"NotPermittedError\": 403,\n  \"ArgumentNullError\": function(err, req){\n    var method = req && req.method || 'GET';\n    var params = req && req.params || {};\n    var route_path = req && req.route && req.route.path || '';\n\n    if(/GET|HEAD/i.test(method) || params.hasOwnProperty(err.argumentName) || new RegExp(\":\" + err.argumentName + '').test(route_path + '/')) err.status_code = 404;\n    else err.status_code = 400;\n    err.message = err.message.replace(new RegExp(\"^Missing argument: (\" + err.argumentName + \")$\"), 'Not Found: \"$1\"' );\n  },\n  \"NotFoundError\": 404,\n  \"NotSupportedError\": 405,\n  \"AlreadyInUseError\": 409,\n};\n\nvar codes = {};\nObject.keys(http.STATUS_CODES).forEach(function(key){\n  codes[key] = http.STATUS_CODES[key];\n});\nvar message_map = HttpStatusError.message_map = codes;","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/middleware/crashProtector.js":"module.exports = function (errorHandler){\n  return function crashProtector(req, res, next) {\n    var domain = require('domain'); //require only if needed, because \"Due to their experimental nature, the Domains features are disabled unless the domain module is loaded at least once.\"\n    var d = domain.create();\n    d.on('error', function(err){ \n      console.error(\"Fatal crash protected!\");\n      d.dispose();\n      if(res.finished || Object.keys(res._headers).length) {\n        console.error(err && err.stack);\n        return res.end();\n      } \n      if(errorHandler) errorHandler(err, req, res);\n      else next(err);\n    });\n    d.run(next);\n  }\n}\n\nvar findErrorHandler = function(app){\n  try {\n    var errorHandler;\n    var foundRouter = false;\n    for(var i=0; i<app.stack; i++){\n      var middleware = app.stack[i];\n      if(foundRouter && middleware.handle.length >= 4) {\n        errorHandler = middleware;\n        break;\n      } else if(app.router === middleware.handle) foundRouter = true;\n    }\n    return errorHandler;\n  } catch(e) {\n    console.error(\"Crash protector error\", e);\n  }\n}","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/alreadyInUse.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"AlreadyInUseError\", {\n  args: ['entity_name', 'arg1', 'arg2', 'arg3', 'arg4'],\n  generateMessage: function(){\n    var args = Array.prototype.slice.call(this.args, 1);\n    return \"The specified '\" + this.entity_name + \"' value is already in use for: \" + args.join(', ');\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/argument.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"ArgumentError\", {\n  args: ['argumentName', 'inner_error'],\n  generateMessage: function(){\n    return \"Invalid or missing argument supplied: \" + this.argumentName;\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/argumentNull.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"ArgumentNullError\", {\n  args: ['argumentName', 'inner_error'],\n  extends: require('./argument'),\n  generateMessage: function(){\n    return \"Missing argument: \" + this.argumentName;\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/authenticationRequired.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"AuthenticationRequiredError\", {\n  args: ['message', 'inner_error'],\n  generateMessage: function(){\n    return \"An attempt was made to perform an operation without authentication: \" + this.message;\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/invalid-operation.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"InvalidOperationError\", {\n  args: ['message', 'inner_error'],\n  generateMessage: function(){\n    return \"Invalid Operation: \" + this.message;\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/not-found.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"NotFoundError\", {\n  args: ['entity_name', 'inner_error'],\n  generateMessage: function(){\n    return 'Not Found: \"' + this.entity_name + '\"';\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/not-supported.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"NotSupportedError\", {\n  args: ['message', 'inner_error'],\n  generateMessage: function(){\n    return \"Not Supported: \" + this.message;\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/notPermitted.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"NotPermittedError\", {\n  args: ['message', 'inner_error'],\n  generateMessage: function(){\n    return \"An attempt was made to perform an operation that is not permitted: \" + this.message;\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/timeout.js":"var generateClass = require('./helpers/class-generator');\nmodule.exports = generateClass(\"TimeoutError\", {\n  args: ['time', 'inner_error'],\n  generateMessage: function(){\n  \tif(/^\\d/.test(this.time)) return \"Timeout of '\" + this.time + \"' exceeded\";\n  \telse return \"Timeout exceeded: \" + this.time;\n  }\n})\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/validation.js":"var generateClass = require('./helpers/class-generator');\nvar ArgumentError = require('./argument');\n\nvar ValidationError = module.exports = generateClass(\"ValidationError\", {\n  args: ['message', 'code', 'field']\n});\n\nValidationError.prototype.addError = function addError(error) {\n  this.errors = this.errors || [];\n  this.errors.push(error);\n  return this;\n}\n\nValidationError.prototype.addErrors = function addErrors(errors) {\n  if(!(errors instanceof Array)) throw new ArgumentError(\"errors\");\n  \n  this.errors = this.errors || [];\n  Array.prototype.push.apply(this.errors, errors);\n  return this;\n}\n\nValidationError.prototype.generateMessage = function generateMessage(){\n  return this.message || \"Validation failed.\";\n}\n\nValidationError.prototype.toJSON = function toJSON(){\n  var o = {};\n  if(this.errors) {\n    if(this.message) o.message = this.message;\n    o.errors = this.errors.map(function(error){\n      return error.toJSON();\n    });\n  } else {\n    if(this.message) o.text = this.message;\n    if(this.code) o.code = this.code;\n    if(this.field) o.field = this.field;    \n  }\n  return o;\n}","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/io/io.js":"module.exports = require('../helpers/class-generator')('IOError');","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/io/file-load.js":"var generateClass = require('../helpers/class-generator');\nmodule.exports = generateClass(\"FileLoadError\", {\n  args: ['file_name', 'inner_error'],\n  extends: require('./io'),\n  generateMessage: function(){\n    return \"Unable to load file: \" + this.file_name;\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/io/file-not-found.js":"var generateClass = require('../helpers/class-generator');\nmodule.exports = generateClass(\"FileNotFoundError\", {\n  args: ['file_name', 'inner_error'],\n  extends: require('./io'),\n  generateMessage: function(){\n    return \"File not found: \" + this.file_name;\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-common-errors/node_modules/common-errors/lib/data/data.js":"module.exports = require('../helpers/class-generator')('DataError');"}